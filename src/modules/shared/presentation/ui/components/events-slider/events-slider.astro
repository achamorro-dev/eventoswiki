---
import EventCard from '../event-card/event-card.astro'
import { Link } from '../link'
import SectionSubtitle from '../section-title/section-subtitle.astro'
import Slide from '../slider/slide.astro'
import Slider from '../slider/slider.astro'

interface SliderEvent {
  slug: string
  title: string
  image: string
  tags: string[]
  tagColor: string
  altImage?: string
  startsAt: Date
  endsAt: Date
  location?: string | null
}

interface Props {
  events: SliderEvent[]
  title: string
  seeMoreLink: string
  goToEvent: (slug: string) => string
}

const { events = [], title, seeMoreLink, goToEvent } = Astro.props
---

<article class="events-slider">
  <header class="header">
    <SectionSubtitle>{title}</SectionSubtitle>
    <Link href={seeMoreLink} variant="ghost" className="link" aria-label={`${title} Ver más`}>Ver más</Link>
  </header>
  {events.length === 0 && <p class="empty-message">No hay eventos disponibles en estos momentos</p>}
  {
    events.length > 0 && (
      <Slider classes="event-slider">
        {events.map(event => {
          return (
            <Slide>
              <EventCard event={event} goToEvent={goToEvent} />
            </Slide>
          )
        })}
      </Slider>
    )
  }
</article>

<style>
  @reference "../../../../../../styles/global.css";

  .events-slider {
    @apply w-screen;
  }
  .header {
    @apply mb-4 flex items-center justify-between px-4 lg:px-8;
  }
  .link {
    @apply shrink-0 text-right;
  }
  .empty-message {
    @apply text-muted-foreground p-4 text-sm lg:p-8;
  }
  .event-slider {
    @apply pl-4 lg:pl-8;

    li:last-child {
      @apply mr-4 lg:mr-8;
    }
  }
</style>
