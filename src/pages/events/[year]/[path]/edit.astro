---
import { EventsLocator } from '@/events/di/events.locator'
import { EventNotFound } from '@/events/domain/errors/event-not-found'
import type { Event } from '@/events/domain/event'
import { EventEditForm } from '@/events/presentation/client/components/event-edit-form/event-edit-form'
import BaseLayout from '@/layouts/base-layout.astro'
import Layout from '@/layouts/layout.astro'
import { OrganizationsLocator } from '@/organizations/di/organizations.locator'
import { ProvincesLocator } from '@/provinces/di/provinces.locator'
import type { Province } from '@/provinces/domain/province'
import NotFound from '@/ui/components/not-found/not-found.astro'
import { SectionTitle } from '@/ui/components/section-title/section-title'
import { Urls } from '@/ui/urls/urls'
import { navigate } from 'astro:transitions/client'

const year = Astro.params.year
const path = Astro.params.path

if (!year || !path) {
  navigate(Urls.HOME)
  return
}

const userId = Astro.locals.user?.id
const slug = `${year}/${path}`

let event: Event | undefined
let provinces: Province[] = []
let content: string = ''
let canEdit = false

try {
  event = await EventsLocator.getEventQuery().execute({ slug: slug })
  provinces = await ProvincesLocator.getProvincesQuery().execute()

  if (!event.hasOrganization()) {
    return Astro.redirect(Urls.EVENT(slug))
  }

  if (event && userId) {
    const organizations = await OrganizationsLocator.getUserOrganizationsQuery().execute({ userId })
    canEdit = organizations.some(organization => event!.isOrganizedBy(organization.id))
  }
} catch (error) {
  switch (true) {
    case error instanceof EventNotFound:
      Astro.response.status = 404
      Astro.response.statusText = 'Not found'
      break
    default:
      Astro.response.status = 500
      Astro.response.statusText = 'Internal server error'
      break
  }
}
---

{
  event && canEdit ? (
    <>
      <Layout title={'Editar evento'}>
        <article>
          <SectionTitle>Editar evento</SectionTitle>
          <EventEditForm
            client:load
            event={event.toPrimitives()}
            organizationId={event.organizationId!}
            provinces={provinces}
          />
        </article>
      </Layout>
    </>
  ) : (
    <BaseLayout title="Evento no encontrado">
      <NotFound title="Evento no encontrado" />
    </BaseLayout>
  )
}
