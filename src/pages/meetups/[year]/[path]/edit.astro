---
import BaseLayout from '@/layouts/base-layout.astro'
import Layout from '@/layouts/layout.astro'
import { MeetupsLocator } from '@/meetups/di/meetups.locator'
import { MeetupNotFound } from '@/meetups/domain/errors/meetup-not-found'
import type { Meetup } from '@/meetups/domain/meetup'
import { MeetupEditForm } from '@/meetups/presentation/client/components/meetup-edit-form/meetup-edit-form'
import { OrganizationsLocator } from '@/organizations/di/organizations.locator'
import { ProvincesLocator } from '@/provinces/di/provinces.locator'
import type { Province } from '@/provinces/domain/province'
import NotFound from '@/ui/components/not-found/not-found.astro'
import { SectionTitle } from '@/ui/components/section-title/section-title'
import { Urls } from '@/ui/urls/urls'
import { navigate } from 'astro:transitions/client'

const year = Astro.params.year
const path = Astro.params.path

if (!year || !path) {
  navigate(Urls.HOME)
  return
}

const userId = Astro.locals.user?.id
const slug = `${year}/${path}`

let meetup: Meetup | undefined
let provinces: Province[] = []
let canEdit = false

try {
  meetup = await MeetupsLocator.getMeetupQuery().execute({ slug: slug })
  provinces = await ProvincesLocator.getProvincesQuery().execute()

  if (!meetup.hasOrganization()) {
    return Astro.redirect(Urls.MEETUP(slug))
  }

  if (meetup && userId) {
    const organizations = await OrganizationsLocator.getUserOrganizationsQuery().execute({ userId })
    canEdit = organizations.some(organization => meetup!.isOrganizedBy(organization.id))
  }
} catch (error) {
  switch (true) {
    case error instanceof MeetupNotFound:
      Astro.response.status = 404
      Astro.response.statusText = 'Not found'
      break
    default:
      Astro.response.status = 500
      Astro.response.statusText = 'Internal server error'
      break
  }
}
---

{
  meetup && canEdit ? (
    <>
      <Layout title={'Editar meetup'}>
        <article>
          <SectionTitle>Editar meetup</SectionTitle>
          <MeetupEditForm
            client:load
            meetup={meetup.toPrimitives()}
            organizationId={meetup.organizationId!}
            provinces={provinces}
          />
        </article>
      </Layout>
    </>
  ) : (
    <BaseLayout title="Meetup no encontrado">
      <NotFound title="Meetup no encontrado" />
    </BaseLayout>
  )
}
