---
import { Event } from '@/modules/events/domain/event'
import BaseLayout from './base-layout.astro'
import AddToCalendarButton from '@/ui/components/add-to-calendar-button/add-to-calendar-button.astro'
import Container from '@/ui/components/container/container.astro'
import { EventDatePeriod } from '@/ui/components/event-date-period/event-date-period'
import { SocialLink } from '@/ui/components/social-link/social-link'
import { Link, MapPin } from '@/ui/icons'
import { Urls } from '@/ui/urls/urls'
import type { Meetup } from '@/meetups/domain/meetup'
import { Badge } from '@/ui/badge'
import { SocialNetwork } from '@/shared/domain/social/social-network'
import { SocialRow } from '@/ui/components/social-row/social-row'

interface Props {
  event: Event | Meetup
}
const { event } = Astro.props

const {
  slug,
  title,
  shortDescription,
  image,
  tags,
  tagColor,
  altImage,
  startsAt,
  endsAt,
  twitter,
  twitch,
  instagram,
  youtube,
  facebook,
  linkedin,
  github,
  telegram,
  whatsapp,
  discord,
  web,
  location,
} = event
const url = Urls.EVENT(slug)
---

<BaseLayout
  title={`${title} - eventos.wiki`}
  description={shortDescription}
  image={image}
  url={`https://eventos.wiki${url}`}
>
  <header
    class="max-w-5xl w-full mx-auto mt-4 flex flex-col justify-center lg:items-center px-4 lg:px-0 lg:justify-start gap-4 md:flex-row"
    id="main"
  >
    <img
      id="event-image"
      src={image}
      alt={altImage || `Foto de portada del evento ${title}`}
      class="w-full max-w-[350px] max-h-[300px] min-h-[200px] object-cover rounded-xl shadow-md bg-white"
      loading="lazy"
      onerror="this.src='/not-found.jpg'"
      transition:name={`media-image-${url}`}
    />
    <div>
      <div class="w-full lg:px-6 max-w-5xl xl:px-0">
        <div class="flex items-center gap-2" transition:animate="fade">
          {
            tags.map((t: string) => (
              <Badge color={tagColor} className="text-white">
                {t.toUpperCase()}
              </Badge>
            ))
          }
        </div>
        <h1 class="text-4xl font-medium text-black dark:text-white" tabindex={0} transition:animate="fade">
          {title}
        </h1>
        <EventDatePeriod startDate={startsAt} endDate={endsAt} client:load transition:animate="fade" />
        {
          web && (
            <div class="flex items-center gap-1 text-black dark:text-white" transition:animate="fade">
              <Link size="1.2rem" />
              <a
                href={web}
                target="_blank"
                rel="nofollow"
                class="text-sm line-clamp-1"
                aria-label={`Link al evento ${title}`}
              >
                {web}
              </a>
            </div>
          )
        }
        {
          location && (
            <div class="flex items-center gap-1 text-black dark:text-white" transition:animate="fade">
              <MapPin size="1.25rem" />
              <p class="text-sm py-2" tabindex="0" aria-label={`LocalizaciÃ³n del evento: ${location}`}>
                {location}
              </p>
            </div>
          )
        }
      </div>
      <SocialRow
        name={title}
        twitter={twitter}
        twitch={twitch}
        instagram={instagram}
        youtube={youtube}
        facebook={facebook}
        linkedin={linkedin}
        github={github}
        telegram={telegram}
        whatsapp={whatsapp}
        discord={discord}
        web={web}
      />
    </div>
  </header>
  <main class="lg:mt-4">
    <Container maxSize="m" className="event-container">
      <slot />
    </Container>
    <div class="sticky bottom-2 w-full text-center p-4">
      <AddToCalendarButton
        title={title}
        description={shortDescription}
        startsAt={startsAt}
        endsAt={endsAt}
        location={location || undefined}
      />
    </div>
  </main>
</BaseLayout>

<style is:global>
  @reference "../styles/global.css";

  body {
    @apply bg-background text-foreground dark:bg-background dark:text-foreground m-0 grid min-h-full grid-rows-[auto_auto_1fr_auto] scroll-smooth;
  }

  article p,
  article span {
    @apply text-lg text-gray-900 dark:text-gray-50;
  }

  article small {
    @apply text-sm text-gray-900 dark:text-gray-50;
  }

  article h2,
  article h3,
  article h4,
  article h5,
  article h6 {
    @apply !font-bold;
  }

  article h2 {
    @apply py-4 !text-3xl text-slate-900 dark:text-gray-200;
  }

  article h3 {
    @apply py-3 !text-2xl text-slate-900 dark:text-gray-200;
  }

  article p {
    @apply py-2;
  }

  article table {
    @apply mb-10;
  }

  article table tr {
    @apply border-b dark:border-b-gray-50;
  }

  article table td {
    @apply p-4 text-gray-900 dark:text-gray-50;
  }

  article table th {
    @apply p-4 !text-gray-900 dark:!text-gray-50;
  }

  article ol,
  article ul {
    @apply p-4 font-sans text-base;
  }

  article ol {
    @apply list-decimal;
  }

  article ul {
    @apply list-disc;
  }

  article ul li {
    @apply mb-2 !text-lg text-slate-900 dark:text-gray-200;
  }

  article ol li {
    @apply mb-2 !text-lg text-slate-900 dark:text-gray-200;
  }

  .event-container a {
    @apply underline;
  }
</style>
