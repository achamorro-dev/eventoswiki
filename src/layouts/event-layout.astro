---
import { Event } from '@/modules/events/domain/event'
import BaseLayout from './base-layout.astro'
import AddToCalendarButton from '@/ui/components/add-to-calendar-button/add-to-calendar-button.astro'
import Container from '@/ui/components/container/container.astro'
import { EventDatePeriod } from '@/ui/components/event-date-period/event-date-period'
import { Pencil } from '@/ui/icons'
import { Urls } from '@/ui/urls/urls'
import { Meetup } from '@/meetups/domain/meetup'
import { SocialRow } from '@/ui/components/social-row/social-row'
import { Link } from '@/ui/components/link'
import OrganizedBy from '@/organizations/presentation/server/components/organized-by/organized-by.astro'
import EventTags from '@/ui/components/event-tags/event-tags.astro'
import { EventLocation } from '@/ui/components/event-location/event-location'
import { DeleteEventModal } from '@/events/presentation/client/components/delete-event-modal/delete-event-modal'
import { DeleteMeetupModal } from '@/meetups/presentation/client/components/delete-meetup-modal/delete-meetup-modal'

interface Props {
  event: Event | Meetup
  isOrganizer?: boolean
}
const { event, isOrganizer = false } = Astro.props

const {
  slug,
  title,
  shortDescription,
  image,
  tags,
  tagColor,
  startsAt,
  endsAt,
  twitter,
  twitch,
  instagram,
  youtube,
  facebook,
  linkedin,
  github,
  telegram,
  whatsapp,
  discord,
  web,
  location,
  organizationId,
} = event
const isMeetup = event instanceof Meetup
const url = isMeetup ? Urls.MEETUP(slug) : Urls.EVENT(slug)
---

<BaseLayout
  title={`${title} - eventos.wiki`}
  description={shortDescription}
  image={image.toString()}
  url={`https://eventos.wiki${url}`}
>
  <header
    class="max-w-5xl w-full mx-auto mt-4 flex flex-col justify-center lg:items-start px-4 lg:px-0 lg:justify-start gap-4 md:flex-row"
    id="main"
  >
    <div class="flex flex-col items-center gap-4">
      <img
        id="event-image"
        src={image.toString()}
        alt={`Foto de portada del evento ${title}`}
        class="w-full md:max-w-[450px] md:max-h-[400px] min-h-[200px] object-cover rounded-xl shadow-md bg-white"
        loading="lazy"
        onerror="this.src='/not-found.jpg'"
        transition:name={`media-image-${url}`}
      />
      <OrganizedBy organizationId={organizationId}>
        {
          isOrganizer && (
            <div slot="actions" class="flex flex-row gap-2">
              <Link variant="secondary" href={isMeetup ? Urls.MEETUP_EDIT(slug) : Urls.EVENT_EDIT(slug)}>
                <Pencil />
                Editar
              </Link>
              {isMeetup ? (
                <DeleteMeetupModal client:load meetupId={event.id.value} />
              ) : (
                <DeleteEventModal client:load eventId={event.id.value} />
              )}
            </div>
          )
        }
      </OrganizedBy>
      <SocialRow
        name={title}
        twitter={twitter}
        twitch={twitch}
        instagram={instagram}
        youtube={youtube}
        facebook={facebook}
        linkedin={linkedin}
        github={github}
        telegram={telegram}
        whatsapp={whatsapp}
        discord={discord}
        web={web}
      />
    </div>
    <div>
      <div class="w-full lg:px-6 max-w-5xl xl:px-0">
        <EventTags tags={tags} tagColor={tagColor} />
        <h1 class="text-4xl font-medium text-black dark:text-white" tabindex={0} transition:animate="fade">
          {title}
        </h1>
        <EventDatePeriod startDate={startsAt} endDate={endsAt} client:load transition:animate="fade" />
        <EventLocation location={location} client:load transition:animate="fade" />
      </div>
    </div>
  </header>
  <main class="lg:mt-4">
    <Container maxSize="m" className="event-container">
      <slot />
    </Container>
    <div class="sticky bottom-2 w-full text-center p-4">
      <AddToCalendarButton
        title={title}
        description={shortDescription}
        startsAt={startsAt}
        endsAt={endsAt}
        location={location || undefined}
      />
    </div>
  </main>
</BaseLayout>

<style is:global>
  @reference "../styles/global.css";

  body {
    @apply bg-background text-foreground dark:bg-background dark:text-foreground m-0 grid min-h-full grid-rows-[auto_auto_1fr_auto] scroll-smooth;
  }

  article p,
  article span {
    @apply text-lg text-gray-900 dark:text-gray-50;
  }

  article small {
    @apply text-sm text-gray-900 dark:text-gray-50;
  }

  article h2,
  article h3,
  article h4,
  article h5,
  article h6 {
    @apply !font-bold;
  }

  article h2 {
    @apply py-4 !text-3xl text-slate-900 dark:text-gray-200;
  }

  article h3 {
    @apply py-3 !text-2xl text-slate-900 dark:text-gray-200;
  }

  article p {
    @apply py-2;
  }

  article table {
    @apply mb-10;
  }

  article table tr {
    @apply border-b dark:border-b-gray-50;
  }

  article table td {
    @apply p-4 text-gray-900 dark:text-gray-50;
  }

  article table th {
    @apply p-4 !text-gray-900 dark:!text-gray-50;
  }

  article ol,
  article ul {
    @apply p-4 font-sans text-base;
  }

  article ol {
    @apply list-decimal;
  }

  article ul {
    @apply list-disc;
  }

  article ul li {
    @apply mb-2 !text-lg text-slate-900 dark:text-gray-200;
  }

  article ol li {
    @apply mb-2 !text-lg text-slate-900 dark:text-gray-200;
  }

  article iframe {
    @apply w-full;
  }

  .event-container a {
    @apply underline;
  }
</style>
